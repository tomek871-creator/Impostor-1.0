from flask import Flask, request, redirect, render_template_string, jsonify, make_response
import random
import string

app = Flask(__name__)

# ===============================
#  LISTA S≈Å√ìW (50% prostych, 50% powa≈ºniejszych)
# ===============================
WORDS = [
    # proste
    "pies", "kot", "rower", "las", "telefon", "szko≈Ça", "ksiƒÖ≈ºka", "pociƒÖg", "cukierek", "chmura",
    "morze", "zamek", "samolot", "kwiat", "miasto", "komputer", "pude≈Çko", "zegarek", "s≈Ço≈Ñce", "≈õnieg",
    "muzyka", "ulica", "auto", "d≈Çugopis", "okno", "krzes≈Ço", "st√≥≈Ç", "jab≈Çko", "drzewo", "zupa",
    "ryba", "kr√≥l", "kr√≥lowa", "ogr√≥d", "pociƒÖg", "plecak", "szalik", "czapka", "pi≈Çka", "piesek",
    "most", "dom", "g√≥ra", "kawa", "herbata", "zegar", "film", "obraz", "sklep", "buty",
    # powa≈ºniejsze
    "wolno≈õƒá", "technologia", "sprawiedliwo≈õƒá", "ambicja", "historia", "dyplomacja", "emocje", "odwaga", "strategia", "wiedza",
    "filozofia", "mechanika", "spo≈Çecze≈Ñstwo", "komunikacja", "ekonomia", "fizyka", "energia", "polityka", "muzeum", "inspiracja",
    "relacja", "kultura", "sztuka", "matematyka", "psychologia", "biologia", "muzykologia", "≈õwiadomo≈õƒá", "analiza", "astronomia",
    "cywilizacja", "innowacja", "warto≈õƒá", "honor", "dyscyplina", "motywacja", "organizacja", "r√≥wno≈õƒá", "empatia", "odpowiedzialno≈õƒá",
    "wsp√≥≈Çpraca", "przyja≈∫≈Ñ", "rozsƒÖdek", "edukacja", "wsp√≥lnota", "przysz≈Ço≈õƒá", "autorytet", "badania", "technika", "etyka"
]

# ===============================
#  DANE GIER (trzymane w RAM)
# ===============================
games = {}

# ===============================
#  STRONA G≈Å√ìWNA
# ===============================
@app.route("/")
def index():
    return render_template_string("""
    <html>
    <head>
        <title>Impostor Game üé≠</title>
        <style>
            body { background-color: #121212; color: white; text-align: center; font-family: Arial; margin-top: 10%; }
            input, button { padding: 10px; border-radius: 8px; border: none; margin: 5px; }
            input { width: 200px; }
            button { background-color: #03a9f4; color: white; cursor: pointer; }
            button:hover { background-color: #0288d1; }
            .box { background-color: #1e1e1e; padding: 30px; border-radius: 12px; display: inline-block; }
        </style>
    </head>
    <body>
        <div class="box">
            <h1>üé≠ Impostor Game</h1>

            <form id="createForm" action="/create" method="post">
                <p>Wpisz kod pokoju (opcjonalnie) lub zostaw puste, aby wylosowaƒá:</p>
                <input name="room" placeholder="Kod pokoju (opcjonalnie)">
                <button type="submit">üÜï Stw√≥rz pok√≥j</button>
            </form>

            <hr style="margin: 20px 0; opacity: 0.3;">

            <p>Lub do≈ÇƒÖcz do istniejƒÖcego pokoju:</p>
            <form id="joinForm" onsubmit="event.preventDefault(); 
                        const code = document.querySelector('[name=join_room]').value.trim().toUpperCase();
                        if(!code) return alert('Podaj kod pokoju');
                        window.location = '/room/' + encodeURIComponent(code);">
                <input name="join_room" placeholder="Kod pokoju" required>
                <button type="submit">‚û°Ô∏è Do≈ÇƒÖcz</button>
            </form>
        </div>
    </body>
    </html>
    """)

# ===============================
#  TWORZENIE POKOJU
# ===============================
@app.route("/create", methods=["POST"])
def create_game():
    given = request.form.get("room", "").strip().upper()
    if given:
        room = given
    else:
        room = ''.join(random.choices("ABCDEFGHJKLMNPQRSTUVWXYZ23456789", k=5))

    while room in games:
        room = ''.join(random.choices("ABCDEFGHJKLMNPQRSTUVWXYZ23456789", k=5))

    games[room] = {
        "word": random.choice(WORDS),
        "players": [],
        "impostor": None,
        "started": False
    }

    link = request.host_url.rstrip("/") + f"/room/{room}"
    return render_template_string(f"""
    <html><body style="font-family:Arial;text-align:center;margin-top:40px;">
        <h2>‚úÖ Pok√≥j utworzony: {room}</h2>
        <p>Wy≈õlij ten link znajomym:</p>
        <p><a href="{link}">{link}</a></p>
        <p><a href="/">‚¨ÖÔ∏è Powr√≥t</a></p>
    </body></html>
    """)

# ===============================
#  WEJ≈öCIE DO POKOJU
# ===============================
@app.route("/room/<room>")
def room_page(room):
    if room not in games:
        return f"‚ùå Pok√≥j {room} nie istnieje", 404

    res = make_response(render_template_string("""
    <html>
    <head>
        <title>Pok√≥j {{ room }}</title>
        <style>
            body { background:#111; color:white; font-family:Arial; text-align:center; margin-top:5%; }
            button { background:#03a9f4; border:none; color:white; padding:10px 20px; border-radius:8px; cursor:pointer; }
            button:hover { background:#0288d1; }
            #players { margin-top:20px; }
        </style>
    </head>
    <body>
        <h1>Pok√≥j {{ room }}</h1>
        <p id="status">Oczekiwanie na rozpoczƒôcie gry...</p>
        <div id="players"></div>
        <button id="startBtn" onclick="startGame()">‚ñ∂Ô∏è Start</button>

        <script>
        const room = "{{ room }}";
        document.cookie = "player_id=" + Math.random().toString(36).substring(2);

        async function refresh() {
            const r = await fetch("/status/" + room);
            const data = await r.json();
            document.getElementById("players").innerHTML = "<p>Gracze: " + data.players.length + "</p>";

            if (data.started) {
                window.location = "/play/" + room;
            }

            setTimeout(refresh, 2000);
        }
        refresh();

        async function startGame() {
            await fetch("/start/" + room);
            window.location = "/play/" + room;
        }
        </script>
    </body>
    </html>
    """, room=room))
    res.set_cookie("room", room)
    return res

# ===============================
#  STATUS GRY
# ===============================
@app.route("/status/<room>")
def status(room):
    game = games.get(room)
    if not game:
        return jsonify({"error": "no_room"}), 404
    return jsonify({"players": game["players"], "started": game["started"]})

# ===============================
#  START GRY
# ===============================
@app.route("/start/<room>")
def start(room):
    game = games.get(room)
    if not game or game["started"]:
        return "‚ùå Gra ju≈º trwa lub pok√≥j nie istnieje", 400

    players = game["players"]
    if len(players) < 3:
        return "‚ùå Potrzeba co najmniej 3 graczy", 400

    impostor = random.choice(players)
    game["impostor"] = impostor
    game["started"] = True
    return "‚úÖ Gra rozpoczƒôta!"

# ===============================
#  ROZGRYWKA
# ===============================
@app.route("/play/<room>")
def play(room):
    player_id = request.cookies.get("player_id")
    game = games.get(room)
    if not game:
        return "‚ùå Pok√≥j nie istnieje", 404

    # je≈õli gracz jeszcze nie jest na li≈õcie ‚Äî dopisz
    if player_id not in game["players"]:
        game["players"].append(player_id)

    # losowanie s≈Çowa
    word = game["word"] if player_id != game["impostor"] else "INNE S≈ÅOWO (impostor)"

    return render_template_string("""
    <html><body style="font-family:Arial;text-align:center;margin-top:10%;">
        <h2>Twoje s≈Çowo:</h2>
        <h1 style="font-size:50px;">{{ word }}</h1>
        <p>Nie pokazuj nikomu!</p>
    </body></html>
    """, word=word)

# ===============================
#  URUCHOMIENIE
# ===============================
if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
